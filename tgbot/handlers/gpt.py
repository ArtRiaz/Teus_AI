import logging
import asyncio
from datetime import datetime
from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, FSInputFile, ReplyKeyboardRemove
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.types import InlineKeyboardButton
import os
from tgbot.config import load_config
import openai
from tgbot.keyboards.inline import get_exit_keyboard

config = load_config()

# Настройка логгера
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# Настройка OpenAI
openai.api_key = config.tg_bot.openai

gpt_router = Router()
photo = FSInputFile("tgbot/app_main.png")


# Состояния для чата с ИИ
class AIStates(StatesGroup):
    chatting = State()


# База знаний Teus
KNOWLEDGE_BASE = """
КОМПАНИЯ TEUS - ЛОГИСТИЧЕСКАЯ КОМПАНИЯ

=== ДОКУМЕНТЫ ===

CMR (Международная накладная):
- Заполняется в 4 экземплярах
- Обязательные поля: отправитель, получатель, груз, вес, маршрут
- Подписи и печати обязательны
- На украинском и английском языках
- Действует на всей территории Европы

ТТН (Товарно-транспортная накладная):
- Для внутренних перевозок по Украине
- Обязательна для всех грузов
- Действительна 30 дней
- 2 экземпляра: водитель и получатель

Инвойс:
- Коммерческий документ
- Детальная информация о грузе
- Стоимость и условия поставки
- Нужен для таможни

Документы водителя:
Международные рейсы: паспорт, права, медсправка, страховка Green Card
Внутренние рейсы: паспорт/ID, права, медсправка

=== ПРОЦЕДУРЫ ===

Загрузка:
1. Проверить груз по документам
2. Взвесить фактический вес
3. Проверить упаковку и маркировку
4. Сфотографировать груз
5. Подписать документы
6. Закрепить груз по правилам

Разгрузка:
1. Проверить пломбы
2. Сверить груз с документами
3. Зафиксировать повреждения (если есть)
4. Получить подпись получателя
5. Сфотографировать пустой прицеп
6. Отправить отчет диспетчеру

Предрейсовый осмотр:
- Уровень масла, тосола, тормозной жидкости
- Давление в шинах
- Работа тормозов и рулевого
- Освещение и сигнализация
- Документы и медкомплект

Таможенные процедуры:
1. Подача документов
2. Таможенный досмотр
3. Ветконтроль (для продуктов)
4. Оплата пошлин и сборов
5. Получение штампов

=== КОНТАКТЫ TEUS ===

Диспетчерская (24/7): +380XXXXXXXXX
Экстренная линия: +380XXXXXXXXX
Служба поддержки: +380XXXXXXXXX
Отдел логистики: +380XXXXXXXXX
Бухгалтерия: +380XXXXXXXXX

=== МАРШРУТЫ ===

Киев → Одесса:
- Расстояние: 475 км
- Время: 5-6 часов
- Трасса: М05
- Заправки: Умань, Первомайск, Николаев
- Отели: Умань (Центральный), Первомайск (Южная Украина)

Киев → Львов:
- Расстояние: 540 км
- Время: 6-7 часов
- Трасса: М06
- Заправки: Житомир, Ровно, Дубно
- Отели: Житомир (Premier), Ровно (Украина)

Киев → Харьков:
- Расстояние: 480 км
- Время: 5-6 часов
- Трасса: М03
- Заправки: Полтава, Лубны
- Отели: Полтава (Галицкая), Лубны (Мир)

Международные маршруты:
Польша - пункты пропуска: Краковец, Шегини, Мостиска (ожидание 2-4 часа)
Румыния - пункты пропуска: Сирет, Черновцы (ожидание 1-3 часа)
Словакия - пункт пропуска: Ужгород (ожидание 1-2 часа)

=== ТЕХНИЧЕСКАЯ ПОМОЩЬ ===

Частые поломки:

Перегрев двигателя:
- Остановиться безопасно
- Не глушить сразу
- Проверить уровень тосола
- Связаться с механиком

Проблемы с тормозами:
- Немедленно остановиться
- Включить ручник
- Вызвать эвакуатор
- НЕ продолжать движение

Спущенное колесо:
- Остановиться на обочине
- Включить аварийку
- Поставить знак аварийной остановки
- Заменить колесо или вызвать помощь

Проблемы с электрикой:
- Проверить предохранители
- Проверить клеммы аккумулятора
- При серьезных проблемах - в сервис

Сервисные центры:
Киев: СТО Европа (+380XXXXXXXXX), Мегаполис Авто (+380XXXXXXXXX)
Одесса: Одесса-Авто (+380XXXXXXXXX), Порт-Сервис (+380XXXXXXXXX)
Львов: Львов-Транс (+380XXXXXXXXX), Карпаты-Авто (+380XXXXXXXXX)

=== ЭКСТРЕННЫЕ СИТУАЦИИ ===

ДТП:
1. Обезопасить место
2. Вызвать 102 (полиция) и 103 (скорая)
3. Уведомить диспетчера Teus
4. Сфотографировать повреждения
5. НЕ подписывать документы без диспетчера
6. Получить справку о ДТП

Поломка в дороге:
1. Включить аварийку
2. Поставить знак аварийной остановки (30м в городе, 50м за городом)
3. Связаться с диспетчером
4. Описать поломку
5. Дождаться инструкций

Кража груза:
1. Вызвать полицию 102
2. Немедленно звонить диспетчеру
3. Не трогать место преступления
4. Зафиксировать все повреждения
5. Получить справку в полиции

=== РАБОТА С КЛИЕНТАМИ ===

При загрузке:
- Вежливо представиться
- Показать документы
- Следовать инструкциям экспедитора
- Не принимать груз без документов
- Сообщать о проблемах диспетчеру

При разгрузке:
- Прибыть вовремя
- Связаться с получателем заранее
- Проверить документы получателя
- Получить подпись и печать
- Сфотографировать место разгрузки

Конфликтные ситуации:
- Оставаться спокойным
- Не спорить с клиентом
- Связаться с диспетчером
- Документировать все инциденты
- Следовать инструкциям компании

=== ПОЛЕЗНАЯ ИНФОРМАЦИЯ ===

Режим работы водителя:
- Максимум 9 часов вождения в день
- Максимум 56 часов в неделю
- Обязательный отдых 11 часов
- Перерыв каждые 4.5 часа (45 минут)

Тахограф:
- Всегда включать при движении
- Менять карту в установленные сроки
- Делать распечатки по требованию
- Не нарушать режим труда и отдыха

Топливные карты:
- Заправляться только на сетевых АЗС
- Сохранять все чеки
- Не давать карту посторонним
- Сообщать о проблемах с картой

Стоянки:
- Охраняемые стоянки для ночевки
- Проверять документы на въезде
- Не оставлять ценности в кабине
- Пломбировать прицеп на стоянке
"""

# Системный промпт для ИИ-ассистента
SYSTEM_PROMPT = f"""
Ты - виртуальный ассистент логистической компании Teus. Ты помогаешь водителям грузовиков.

ТВОЯ РОЛЬ:
- Опытный диспетчер и консультант по логистике
- Всегда готов помочь решить рабочие вопросы
- Знаешь все процедуры и правила компании Teus
- Говоришь дружелюбно, но профессионально

БАЗА ЗНАНИЙ КОМПАНИИ:
{KNOWLEDGE_BASE}

ПРАВИЛА ОТВЕТОВ:
1. Используй ТОЛЬКО информацию из базы знаний выше
2. Отвечай кратко и по существу
3. При экстренных ситуациях сразу давай номер диспетчера
4. Если не знаешь ответа - направляй к диспетчеру
5. Используй "ты" в общении
6. Добавляй эмодзи для лучшего восприятия
7. Всегда предлагай дополнительную помощь

КРИТИЧЕСКИЕ СИТУАЦИИ (сразу давай контакты):
- ДТП, поломки, кража
- Проблемы на границе
- Конфликты с клиентами
- Технические неисправности

Отвечай на украинском или русском языке, как спрашивает водитель.
"""


@gpt_router.callback_query(F.data == "connect_ai")
async def start_ai_chat(callback: CallbackQuery, state: FSMContext):
    await callback.message.delete()

    welcome_text = """
**🤖 ІІ-Асистент Teus**
Привіт! Я твій віртуальний помічник. Можу відповісти на будь-які питання про роботу:
📋 Документи (CMR, ТТН, інвойси)
🚛 Процедури завантаження/розвантаження
🗺️ Маршрути та заправки
🆘 Екстрені ситуації
🔧 Технічна допомога
📞 Контакти служб
Просто напиши своє запитання...

"""

    await callback.message.answer(
        welcome_text,
        parse_mode="Markdown",
        reply_markup=get_exit_keyboard()
    )

    await state.set_state(AIStates.chatting)


# Обработчик для кнопки выхода из чата
@gpt_router.message(F.text == "❌ Завершити чат з AI")
async def exit_ai_chat(message: Message, state: FSMContext):
    # Очищаем состояние
    await state.clear()

    # Убираем Reply клавиатуру
    await message.answer(
        "✅ **Чат з AI завершено**\n\n"
        "Дякую за використання AI-асистента Teus!\n"
        "Якщо знадобиться допомога - звертайся знову! 😊",
        parse_mode="Markdown",
        reply_markup=ReplyKeyboardRemove()
    )

    kb = InlineKeyboardBuilder()
    kb.row(InlineKeyboardButton(text="🤖 Відкрити AI-помічника", callback_data="connect_ai"))
    kb.row(InlineKeyboardButton(text="↩️ Назад у головне меню", callback_data="menu"))

    await message.answer(
        "💬 **Потрібна допомога?**\nЗапитай у AI-асистента Teus!",
        reply_markup=kb.as_markup()
    )


@gpt_router.message(AIStates.chatting)
async def handle_ai_question(message: Message, state: FSMContext):
    user_question = message.text

    # Показываем, что бот печатает
    await message.bot.send_chat_action(message.chat.id, "typing")

    try:
        # Отправляем запрос к OpenAI (новый синтаксис)
        from openai import AsyncOpenAI

        client = AsyncOpenAI(api_key=openai.api_key)

        response = await client.chat.completions.create(
            model="gpt-4o-mini",  # Новая быстрая и дешевая модель
            messages=[
                {"role": "system", "content": SYSTEM_PROMPT},
                {"role": "assistant", "content": user_question}
            ],
            max_tokens=800,
            temperature=0.3  # Меньше креативности, больше точности
        )

        ai_answer = response.choices[0].message.content

        # Отправляем ответ
        await message.answer(
            ai_answer,
            parse_mode="Markdown",
            reply_markup=get_exit_keyboard()
        )

        logger.info(f"AI response sent to user {message.from_user.id}")

    except Exception as e:
        logger.error(f"Error with OpenAI: {e}")

        await message.answer(
            f"📞 **Для детальної консультації:**\nДиспетчерська: +380XXXXXXXXX",
            parse_mode="Markdown",
            reply_markup=get_exit_keyboard()
        )


# Обработка сообщений вне чата (когда пользователь не в состоянии)
@gpt_router.message(F.text)
async def suggest_ai_help(message: Message):
    kb = InlineKeyboardBuilder()
    kb.add(InlineKeyboardButton(text="🤖 Відкрити AI-помічника", callback_data="connect_ai"))

    await message.answer(
        "💬 Чи є робоче питання? Запитай у AI-асистента Teus!",
        reply_markup=kb.as_markup()
    )
