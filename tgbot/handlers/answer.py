import logging
import random
import asyncio
from typing import Optional
from datetime import datetime, timedelta
from aiogram import Router, types, Bot, F
from aiogram.filters import CommandStart, CommandObject, StateFilter, Command
from aiogram.types import Message, CallbackQuery, FSInputFile, InlineKeyboardMarkup, InlineKeyboardButton, \
    KeyboardButton, ReplyKeyboardMarkup, ReplyKeyboardRemove, InputMediaPhoto, InputMediaVideo
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.utils.keyboard import InlineKeyboardBuilder
from tgbot.keyboards.inline import answer_list_ikb, back_list, start_keyboard_user_db
from sqlalchemy import select, update
import redis.asyncio as redis
import json
import os


photo_menu = FSInputFile("tgbot/Support.png")
video_one = FSInputFile("tgbot/two.mp4")
video_two = FSInputFile("tgbot/first.mp4")
video_three = FSInputFile("tgbot/three.mp4")
video_four = FSInputFile("tgbot/four.mp4")


answer_router = Router()


@answer_router.callback_query(F.data == "menu")
async def answer_list(callback: CallbackQuery):
    # –£–¥–∞–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ
    await callback.message.delete()
    await callback.message.answer_photo(
        photo_menu,
        caption="Telegram-Bot –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ TEUS –¥–æ–ø–æ–º–∞–≥–∞—î –≤–æ–¥—ñ—è–º —à–≤–∏–¥–∫–æ –≤–∏—Ä—ñ—à–∏—Ç–∏ –ø—Ä–æ–±–ª–µ–º–∏ –∑ —Ä–æ–±–æ—á–∏–º–∏ –ø–∏—Ç–∞–Ω–Ω—è–º–∏: –≤—ñ–¥ "
                "–∑–±–æ—ó–≤ —É –ø—Ä–æ–≥—Ä–∞–º—ñ –¥–æ —Å–ø–µ—Ü–∏—Ñ—ñ–∫–∞—Ü—ñ–π –Ω–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è—Ö. –ë–æ—Ç –º–∞—î –≥–æ—Ç–æ–≤—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –Ω–∞ —á–∞—Å—Ç—ñ –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è —Ç–∞ "
                "–º–æ–∂–ª–∏–≤—ñ—Å—Ç—å –º–∏—Ç—Ç—î–≤–æ –∫–æ–Ω—Ç–∞–∫—Ç—É–≤–∞—Ç–∏ –∑ –ø—ñ–¥—Ç—Ä–∏–º–∫–æ—é - –≤—Å–µ –≤ –æ–¥–Ω–æ–º—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—ñ –±–µ–∑ –¥–∑–≤—ñ–Ω–∫—ñ–≤.",
        reply_markup=answer_list_ikb()
    )


@answer_router.callback_query(F.data == "first")
async def answer_first(callback: CallbackQuery):
    # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await callback.message.edit_media(
        media=InputMediaVideo(
            media=video_one,
            caption="<b>–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ –≤—ñ–¥–µ–æ üëÜ\n\n</b>"
                    "<b>- –©–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –¥–ª—è –ø—Ä–æ–ø—É—Å–∫—É ‚ùì\n\n</b>"
                    "–Ø–∫—â–æ –≤–∏ —ó–¥–µ—Ç–µ –Ω–∞ –ø–æ–≥—Ä—É–∑–∫—É –¥–ª—è —Ç–æ–≥–æ —â–æ–± –æ—Ç—Ä–∏–º–∞—Ç–∏ –ø–µ—Ä–µ–ø—É—Å—Ç–∫—É "
                    "–¥–ª—è –Ω–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∞–±–æ –≤–∏–≥—Ä—É–∑–∫–∏ –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ —Å–≤–æ—ó "
                    "–¥–∞–Ω—ñ (–ü–Ü–ü –ø—Ä–æ–ø–∏—Å–æ–º, –Ω–æ–º–µ—Ä–∏ –∞–≤—Ç–æ —Ç–∞ –ø—Ä–∏—á–µ–ø–∞ –¥–ª—è –Ω–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∞ –¥–ª—è –≤–∏–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —â–µ —Ç—Ä–µ–±–∞ –¥–æ–¥–∞—Ç–∏ "
                    "—Ñ–æ—Ç–æ  –¢–¢–ù ) "
        ),
        reply_markup=back_list()
    )


@answer_router.callback_query(F.data == "second")
async def answer_second(callback: CallbackQuery):
    await callback.message.edit_media(
        media=InputMediaVideo(
            media=video_two,
            caption="<b>–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ –≤—ñ–¥–µ–æ üëÜ</b>\n\n"
                    "<b>- –ú–∞—Ä—à—Ä—É—Ç –Ω–∞ –≤–∏–≥—Ä—É–∑–∫—É ‚ùì\n\n</b>"
                    "–ü–µ—Ä–µ–¥ –≤–∏–≥—Ä—É–∑–∫–æ—é –ø–æ—Ç—Ä—ñ–±–Ω–æ —ó—Ö–∞—Ç–∏ –¥–æ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä—ñ—ó –ø—ñ—Å–ª—è —á–æ–≥–æ –¥–æ "
                    "–ö–ü–ü ‚Ññ2 –ø–æ—Ä—Ç—É —É –º –ß–æ—Ä–Ω–æ–º–æ—Ä—å—Å–∫  —Ç–∞–∫–æ–∂ –º–æ–∂–Ω–∞ –ø–æ–¥–∏–≤–∏—Ç–∏—Å—å"
                    "–º–∞—Ä—à—Ä—É—Ç –Ω—É –∫–∞—Ä—Ç—ñ –∞–±–æ –≤ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó —É –¥–æ–¥–∞—Ç–∫—É."
        ),
        reply_markup=back_list()
    )


@answer_router.callback_query(F.data == "third")
async def answer_third(callback: CallbackQuery):
    await callback.message.edit_media(
        media=InputMediaVideo(
            media=video_three,
            caption="<b>–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ –≤—ñ–¥–µ–æ üëÜ</b>\n\n"
                    "<b>- –ú–∞—Ä—à—Ä—É—Ç –Ω–∞ –ø–æ–≥—Ä—É–∑–∫—É‚ùì\n\n</b>"
                    "–ü–æ—Ç—Ä—ñ–±–Ω–æ —ó—Ö–∞—Ç–∏ –¥–æ –ø–æ—Ä—Ç—É —É –º. –ß–æ—Ä–Ω–æ–º–æ—Ä—Å—å–∫ (–ö–ü–ü ‚Ññ2) —Ç–∞–∫–æ–∂ "
                    "–º–æ–∂–Ω–∞ –ø–æ–¥–∏–≤–∏—Ç–∏—Å—å –º–∞—Ä—à—Ä—É—Ç –Ω—É –∫–∞—Ä—Ç—ñ –∞–±–æ –≤ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó —É –¥–æ–¥–∞—Ç–∫—É."

        ),
        reply_markup=back_list()
    )


@answer_router.callback_query(F.data == "four")
async def answer_four(callback: CallbackQuery):
    await callback.message.edit_media(
        media=InputMediaVideo(
            media=video_four,
            caption="<b>–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ –≤—ñ–¥–µ–æ üëÜ\n\n</b>"
                    "<b>–î–µ –±—Ä–∞—Ç–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∏ –Ω–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è‚ùì</b>\n\n"
                    "–î–æ–∫—É–º–µ–Ω—Ç–∏ –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∞–≤—Ç–æ–º–æ–±—ñ–ª—è —Ç–∞ –¥–æ–¥–∞—Ç–∫–æ–≤–∏–π "
                    "–æ—Ä–¥–µ—Ä –∑–Ω–∞—Ö–æ–¥—è—Ç—å—Å—è –Ω–∞ –≤–∞–≥–æ–≤—ñ–π.–ê–¥—Ä–µ—Å—É –º–æ–∂–Ω–æ –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –≤ "
                    "—Ä–æ–∑–¥—ñ–ª—ñ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó –≤ –ø—Ä–æ—Ñ—ñ–ª—ñ Teus Driver –∞–±–æ –ø—Ä–∏ –∑–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—ñ —Ü—ñ—î—ó –∫–Ω–æ–ø–∫–∏."
        ),
        reply_markup=back_list()
    )


@answer_router.callback_query(F.data == "five")
async def answer_five(callback: CallbackQuery):
    await callback.message.edit_media(
        media=InputMediaPhoto(
            media=photo_menu,
            caption="<b>–ù–µ –ø—Ä–∞—Ü—é—î –Ω–∞–≤—ñ–≥–∞—Ü—ñ—è ‚ùì</b>\n\n"
                    "–°—Ö–µ–º–∞ –ø—Ä–æ—ó–∑–¥–∞ 1) –ª–∞–±–∞ (–≤–∏–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è)- –ö–ü–ü ‚Ññ2 - –í–∞–≥–∏ —Ç–∞ —Å–∫–ª–∞–¥–∏ —ñ –ø—Ä–∏—á–∞–ª–∏ (—Å –≥–µ–æ–ª–æ–∫–∞—Ü—ñ—î–π)."
        ),
        reply_markup=back_list()
    )


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ó–∞–∫—Ä—ã—Ç—å" - –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ
@answer_router.callback_query(F.data == "close")
async def close_message(callback: CallbackQuery):
    await callback.message.delete()





